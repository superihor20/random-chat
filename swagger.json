{
  "openapi": "3.0.3",
  "info": { "title": "Chat App", "description": "Eto Chat", "version": "1.0.0" },
  "servers": [{ "url": "http://localhost:4200" }],
  "tags": [{ "name": "Auth" }, { "name": "User" }],
  "paths": {
    "/auth/sign-up": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Create new user in the app",
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AuthDto" } },
            "application/xml": { "schema": { "$ref": "#/components/schemas/AuthDto" } },
            "application/x-www-form-urlencoded": {
              "schema": { "$ref": "#/components/schemas/AuthDto" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthDto" } }
            }
          },
          "403": {
            "description": "Incorect Data",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorDto" } }
            }
          },
          "422": {
            "description": "User already Exist",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorDto" } }
            }
          }
        }
      }
    },
    "/auth/sign-in": {
      "get": {
        "tags": ["Auth"],
        "summary": "Sign in to the app",
        "operationId": "signIn",
        "requestBody": {
          "description": "Sign in to the app",
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AuthDto" } },
            "application/xml": { "schema": { "$ref": "#/components/schemas/AuthDto" } },
            "application/x-www-form-urlencoded": {
              "schema": { "$ref": "#/components/schemas/AuthDto" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AuthDto" } }
            }
          },
          "403": {
            "description": "Incorect Data",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorDto" } }
            }
          },
          "404": {
            "description": "User not Found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorDto" } }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh access token with refresh token",
        "operationId": "refresh",
        "requestBody": {
          "description": "Refresh access token with refresh token",
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RefreshDto" } },
            "application/xml": { "schema": { "$ref": "#/components/schemas/RefreshDto" } },
            "application/x-www-form-urlencoded": {
              "schema": { "$ref": "#/components/schemas/RefreshDto" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New pair of tokens successfully created",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RefreshDto" } }
            }
          },
          "403": {
            "description": "Incorect Data",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorDto" } }
            }
          }
        }
      }
    },
    "/user/find": {
      "get": {
        "tags": ["User"],
        "summary": "Get user data",
        "description": "To get user data you need to make a request with access token",
        "operationId": "userFind",
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserDto" } }
            }
          },
          "401": {
            "description": "You need to provide access token",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorDto" } }
            }
          },
          "404": {
            "description": "User not Found",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorDto" } }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "example": "email@gmail.com" },
          "password": { "minLength": 8, "type": "string", "example": "12345678" }
        }
      },
      "RefreshDto": {
        "type": "object",
        "properties": {
          "refreshToken": { "type": "string", "example": "your jwt token" }
        }
      },
      "ErrorDto": {
        "type": "object",
        "properties": {
          "err": { "type": "string", "example": "something went wrong" },
          "statusCode": { "type": "number", "example": 500 }
        }
      },
      "UserDto": {
        "UserDto": "object",
        "properties": {
          "id": { "type": "number", "example": 1 },
          "username": { "type": "string | null", "example": "username" },
          "email": { "type": "string", "example": "email@gmail.com" },
          "avatar": { "type": "string | null", "example": "link to the image" },
          "banner": { "type": "string | null", "example": "link to the image" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
